/* cloak client */
!function(){var a=function(){function a(a,b,c){a.on(b,function(a){void 0!==i[b]&&_(i[b]).forEach(function(d){i[b]=[],d(a[c])})})}var b,c,d,e,f=!0,g={},h={},i={},j={_setLibs:function(a,b){_=a,io=b},configure:function(a){_(a).forEach(function(a,b){"serverEvents"===b?_(a).forEach(function(a,b){j._on("cloak-"+b,a)}):h[b]=a})},_on:function(a,b){void 0===g[a]&&(g[a]=[]),g[a].push(b)},_off:function(a,b){g[a]=_(g[a]).without(b)},_trigger:function(a,b){void 0!==g[a]&&_.forEach(g[a],function(a){a(b)})},run:function(g){d=g,c=io.connect(d,{"force new connection":!0}),c.on("error",function(a){j._trigger("cloak-error",a)}),c.on("connect_error",function(){j._trigger("cloak-error","Connect error")}),c.on("connect_timeout",function(){j._trigger("cloak-error","Connect timeout")}),c.on("connect",function(){j._trigger("cloak-connect"),void 0===b?c.emit("cloak-begin",{}):c.emit("cloak-resume",{uid:b})}),c.on("disconnect",function(){j._trigger("cloak-disconnect"),f||c.socket.connect()}),c.on("connecting",function(){j._trigger("cloak-connecting")}),c.on("reconnecting",function(){j._trigger("cloak-reconnecting")}),c.on("cloak-roomMemberJoined",function(a){j._trigger("cloak-roomMemberJoined",a)}),c.on("cloak-roomMemberLeft",function(a){j._trigger("cloak-roomMemberLeft",a)}),c.on("cloak-lobbyMemberJoined",function(a){j._trigger("cloak-lobbyMemberJoined",a)}),c.on("cloak-lobbyMemberLeft",function(a){j._trigger("cloak-lobbyMemberLeft",a)}),c.on("cloak-joinedRoom",function(a){j._trigger("cloak-joinedRoom",a)}),c.on("cloak-leftRoom",function(a){j._trigger("cloak-leftRoom",a)}),c.on("cloak-beginResponse",function(a){b=a.uid,e=a.config,f=!1,j._trigger("cloak-begin")}),c.on("cloak-resumeResponse",function(a){a.valid?(e=a.config,j._trigger("cloak-resume")):(j._trigger("cloak-error","Could not resume."),j.end())}),a(c,"cloak-listRoomsResponse","rooms"),a(c,"cloak-joinRoomResponse","success"),a(c,"cloak-createRoomResponse","room"),a(c,"cloak-listUsersResponse","users"),a(c,"cloak-registerUsernameResponse","success"),_(h.messages).forEach(function(a,b){c.on("message-"+b,function(a){j._trigger("message-"+b,a)}),j._on("message-"+b,a)})},end:function(){f=!0,this._disconnect(),j._trigger("cloak-end")},_disconnect:function(){c.disconnect()},connected:function(){return c.socket.connected},_callback:function(a,b){void 0===i[a]&&(i[a]=[]),i[a].push(b)},listRooms:function(a){this._callback("cloak-listRoomsResponse",a),c.emit("cloak-listRooms",{})},joinLobby:function(a){this._callback("cloak-joinLobbyResponse",a),c.emit("cloak-joinLobby",{})},joinRoom:function(a,b){this._callback("cloak-joinRoomResponse",b),c.emit("cloak-joinRoom",{id:a})},leaveRoom:function(a){this._callback("cloak-leaveRoomResponse",a),c.emit("cloak-leaveRoom")},listUsers:function(a){this._callback("cloak-listUsersResponse",a),c.emit("cloak-listUsers",{})},registerUsername:function(a,b){this._callback("cloak-registerUsernameResponse",b),c.emit("cloak-registerUsername",{username:a})},message:function(a,b){c.emit("message-"+a,b)}};return j};"undefined"==typeof window?module.exports=a:cloak=a()}();